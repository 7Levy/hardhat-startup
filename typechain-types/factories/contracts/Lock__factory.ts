/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Lock, LockInterface } from "../../contracts/Lock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_unlockTime",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051620009df380380620009df833981810160405281019061002791906102b7565b6100597fdfa06eaac3d8aa57b4af8bd724771d7b8db59e3d13594146958cf3344985bed260001b61027960201b60201c565b61008b7f3039cdfe91f97dbfd1d7aff4b04a4acc8c5a0dfc0e79fb13c444a83e3323d77e60001b61027960201b60201c565b6100bd7f0fccfd02eeaf53ebc5ca289383fcd528b2105023e46bd9935673bcfe8cc1e8ba60001b61027960201b60201c565b6100ef7f1c5442ffeafb686b8f57d527ec6dc876a3a17f49aa4f1832e5f1052f01bc0b3f60001b61027960201b60201c565b804210610131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012890610367565b60405180910390fd5b6101637f38d46b9f6075caf68e0f48a474d23a1293e9d4b8ea34fb822d5fcdb2803dc1af60001b61027960201b60201c565b6101957fb850fd6e875c61d56ae7a7ca1132214be00e208635f0570cf2f7c83abfc1b7a860001b61027960201b60201c565b6101c77f6dff28d1e1fec6eed86d71832c5829662219c13b33746fe3e5addaaa2648bb3d60001b61027960201b60201c565b806000819055506102007f114eaa619cf11fc69dd39ce0e874da2695523f8c512c3151535eb81894650ff660001b61027960201b60201c565b6102327f88b9cba7b387c39a366ac2b3cde7793a23ab25ec40e2fdfddf678c4a99150bf060001b61027960201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610387565b50565b600080fd5b6000819050919050565b61029481610281565b811461029f57600080fd5b50565b6000815190506102b18161028b565b92915050565b6000602082840312156102cd576102cc61027c565b5b60006102db848285016102a2565b91505092915050565b600082825260208201905092915050565b7f556e6c6f636b2074696d652073686f756c6420626520696e207468652066757460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b60006103516023836102e4565b915061035c826102f5565b604082019050919050565b6000602082019050818103600083015261038081610344565b9050919050565b61064880620003976000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063251c1aa3146100465780633ccfd60b146100645780638da5cb5b1461006e575b600080fd5b61004e61008c565b60405161005b9190610489565b60405180910390f35b61006c610092565b005b610076610447565b60405161008391906104e5565b60405180910390f35b60005481565b6100be7fbb64c31f7f4680abb8b34e7850cf847d4d20513a332e6e8e3b6baf889aede7a960001b61046d565b6100ea7f17ec260ca8ee70845a1667c3354263057a3ccbd8c5076c4856005595ae1720cb60001b61046d565b6101167f5bac5f93a3fd08120354e3ad0e4b316d2724d966fe133f3167369c8170b570e960001b61046d565b6101427f894c81bf99ffa201f7a7b35f70fe619e60353de27d9d2344f79e73a98cdcf8eb60001b61046d565b600054421015610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017e9061055d565b60405180910390fd5b6101b37f88884fdd156435c5269db124e25a210d016d53084ea54c3fa784002bfdc5291a60001b61046d565b6101df7f07b7a36ef33cee14b2f64085ba25fa88236dfa5df36475a567cfbeafb4c1642e60001b61046d565b61020b7f674c2e2a2df25d8492e389a52abf03c2da8d688285ae1cc56795caab65a5c44860001b61046d565b6102377ff2f6c05730ba47204177182a88641c7d7c4c44daf0242f9b5185b6fdba943ff360001b61046d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be906105c9565b60405180910390fd5b6102f37f8054d7f2a03c9e22b78cf50fd69ed79a5b528daa02fe8f804bfd8d5629b64fd360001b61046d565b61031f7f230c6f989d0cdb13d8bf7530e5b27e6bccd87475ff75df789baab1a4c8155dc460001b61046d565b61034b7f7b1b0033ebef72b455e3375ea8d82a4bdd6eff28f71f0e38a8c30e9672543f4c60001b61046d565b7fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93474260405161037c9291906105e9565b60405180910390a16103b07fac99e4c3ffeb76e76633849bfa396e024084c9658a222f84443b6efcd1d56d9c60001b61046d565b6103dc7f82295541c907fbcec7e1b32df5ec696999b96ec05e18302cb7d78bdc459c33c260001b61046d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610444573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b6000819050919050565b61048381610470565b82525050565b600060208201905061049e600083018461047a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104cf826104a4565b9050919050565b6104df816104c4565b82525050565b60006020820190506104fa60008301846104d6565b92915050565b600082825260208201905092915050565b7f596f752063616e27742077697468647261772079657400000000000000000000600082015250565b6000610547601683610500565b915061055282610511565b602082019050919050565b600060208201905081810360008301526105768161053a565b9050919050565b7f596f75206172656e277420746865206f776e6572000000000000000000000000600082015250565b60006105b3601483610500565b91506105be8261057d565b602082019050919050565b600060208201905081810360008301526105e2816105a6565b9050919050565b60006040820190506105fe600083018561047a565b61060b602083018461047a565b939250505056fea264697066735822122024f1a1527c2beef6848b575bdeb13333534c1a6c670d290d135abadc2e0d8cc064736f6c634300080c0033";

type LockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lock__factory extends ContractFactory {
  constructor(...args: LockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _unlockTime: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Lock> {
    return super.deploy(_unlockTime, overrides || {}) as Promise<Lock>;
  }
  override getDeployTransaction(
    _unlockTime: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_unlockTime, overrides || {});
  }
  override attach(address: string): Lock {
    return super.attach(address) as Lock;
  }
  override connect(signer: Signer): Lock__factory {
    return super.connect(signer) as Lock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockInterface {
    return new utils.Interface(_abi) as LockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Lock {
    return new Contract(address, _abi, signerOrProvider) as Lock;
  }
}
